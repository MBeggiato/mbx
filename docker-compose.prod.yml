services:
  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mbx-homepage-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mbx-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: mbx-homepage-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mbx-network

  # pgAdmin (Optional - nur f√ºr Administration)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mbx-homepage-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    networks:
      - mbx-network
    profiles:
      - admin

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: mbx-homepage-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - mbx-network
    profiles:
      - proxy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  mbx-network:
    driver: bridge
